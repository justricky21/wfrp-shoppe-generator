{"version":3,"sources":["components/PopulationDropdown.js","components/ResultsForm.js","item_lists/core.js","components/MainForm.js","util/utils.js","App.js","serviceWorker.js","index.js"],"names":["PopulationDropdown","value","selected","Component","ResultsForm","props","availableItems","itemsIndex","className","map","item","key","name","meleeWeapons","price","coin","icon","availability","page","MainForm","onRollPress","state","gossipScore","gossipRoll","itemsArray","roll","forEach","push","rollItemsInArray","core","setState","onClearPress","e","this","target","valueAsNumber","placeholder","type","onChange","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.48d784c0.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass PopulationDropdown extends Component {\n    render() {\n        return (\n            <select>\n                <option value='low'>Below 100</option>\n                <option selected value='average'>Below 1,000</option>\n                <option value='high'>Below 10,000</option>\n                <option value='vhigh'>10,000 or more</option>\n            </select>\n        )\n    }\n}\n\nexport default PopulationDropdown","import React from 'react'\nimport './ResultsForm.css'\n\nfunction ResultsForm(props) {\n    const { availableItems } = props;\n    let itemsIndex = 0;\n    return (\n        <div className='results'>\n            {availableItems.map(item => {\n                return <p key={itemsIndex++} >{item.name}</p>\n            })}\n        </div>\n    )\n}\n\nexport default ResultsForm\n","export const meleeWeapons = [\n    {\n        name: 'Buckler',\n        price: 2,\n        coin: 'g',\n        icon: '',\n        availability: 4,\n        page: '108',\n    },\n    {\n        name: 'Dagger',\n        price: 1,\n        coin: 'g',\n        icon: '',\n        availability: 5,\n        page: '108',\n    },\n    {\n        name: 'Demilance (Cavalry Spear)',\n        price: 20,\n        coin: 'g',\n        icon: '',\n        availability: 3,\n        page: '108',\n    },\n    {\n        name: 'Flail',\n        price: 15,\n        coin: 'g',\n        icon: '',\n        availability: 3,\n        page: '108',\n    },\n    {\n        name: 'Foil',\n        price: 18,\n        coin: 'g',\n        icon: '',\n        availability: 2,\n        page: '108',\n    },\n    {\n        name: 'Gauntlet/Knuckle-duster',\n        price: 1,\n        coin: 'g',\n        icon: '',\n        availability: 5,\n        page: '108',\n    },\n    {\n        name: 'Great Weapon',\n        price: 20,\n        coin: 'g',\n        icon: '',\n        availability: 4,\n        page: '108',\n    },\n    {\n        name: 'Halberd',\n        price: 15,\n        coin: 'g',\n        icon: '',\n        availability: 5,\n        page: '108',\n    },\n    {\n        name: 'Hand Weapon',\n        price: 10,\n        coin: 'g',\n        icon: '',\n        availability: 5,\n        page: '108',\n    },\n    {\n        name: 'Lance',\n        price: 15,\n        coin: 'g',\n        icon: '',\n        availability: 2,\n        page: '108',\n    },\n    {\n        name: 'Main Gauche',\n        price: 4,\n        coin: 'g',\n        icon: '',\n        availability: 3,\n        page: '108',\n    },\n    {\n        name: 'Morning Star',\n        price: 15,\n        coin: 'g',\n        icon: '',\n        availability: 3,\n        page: '108',\n    },\n    {\n        name: 'Quarter Staff',\n        price: 3,\n        coin: 's',\n        icon: '',\n        availability: 6,\n        page: '108',\n    },\n\n    {\n        name: 'Rapier',\n        price: 18,\n        coin: 'g',\n        icon: '',\n        availability: 3,\n        page: '108',\n    },\n    {\n        name: 'Shield',\n        price: 10,\n        coin: 'g',\n        icon: '',\n        availability: 5,\n        page: '108',\n    },\n    {\n        name: 'Spear',\n        price: 10,\n        coin: 'g',\n        icon: '',\n        availability: 5,\n        page: '108',\n    },\n    {\n        name: 'Sword-breaker',\n        price: 5,\n        coin: 'g',\n        icon: '',\n        availability: 3,\n        page: '108',\n    }\n];\n\nexport const rangedWeapons = [\n    \n]","import React, { Component } from 'react'\nimport PopulationDropdown from './PopulationDropdown'\nimport ResultsForm from './ResultsForm'\nimport * as core from '../item_lists/core'\nimport { rollItemsInArray } from '../util/utils'\n\n\nclass MainForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gossipScore: 0,\n            gossipRoll: 0,\n            availableItems: []\n        }\n    }\n   \n    onRollPress = () => {\n        const { gossipScore, gossipRoll } = this.state;\n        const { meleeWeapons } = core;\n        const availableItems = rollItemsInArray(meleeWeapons, gossipScore, gossipRoll);\n        this.setState({availableItems});\n    }\n    \n    onClearPress = () => {\n        this.setState({ availableItems: [] });\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.valueAsNumber || e.target.value})\n    }\n\n    render() {\n        const { availableItems } = this.state;\n        return (\n            <div className='main-form'>\n                <PopulationDropdown/ >\n                <input\n                    placeholder='Input gossip score...'\n                    type='number'\n                    onChange={e => this.onChange(e)}\n                />\n                <input\n                    placeholder='Input gossip roll...'\n                    type='number'\n                    onChange={e => this.onChange(e)}\n                />\n                <button onClick={this.onRollPress}>Roll!</button>\n                <button onClick={this.onClearPress}>Clear</button>\n                <ResultsForm availableItems={availableItems} />\n            </div>\n        )\n    }\n}\n\nexport default MainForm","// function rolld100() {\n//     return Math.random() * (1 - 100) + 1;\n// }\n\nexport function rollItemsInArray(itemsArray, gossipScore, roll) {\n    const availableItems = [];\n    itemsArray.forEach(item => {\n        switch (item.availability) {\n            case 1:\n                if ((gossipScore - 30 >= roll)) {\n                    availableItems.push(item)\n                }\n                break;\n            case 2:\n                if ((gossipScore - 20 >= roll)) {\n                    availableItems.push(item)\n                }\n                break;\n            case 3:\n                if ((gossipScore - 10 >= roll)) {\n                    availableItems.push(item)\n                }\n                break;\n            case 4:\n                if ((gossipScore >= roll)) {\n                    availableItems.push(item)\n                }\n                break;\n            case 5:\n                if ((gossipScore + 10 >= roll)) {\n                    availableItems.push(item)\n                }\n                break;\n            case 6:\n                if ((gossipScore + 20 >= roll)) {\n                    availableItems.push(item)\n                }\n                break;\n            case 7:\n                if ((gossipScore + 30 >= roll)) {\n                    availableItems.push(item)\n                }\n                break;\n            default:\n                break;\n        }\n    })\n    return availableItems;\n}","import React, { Component } from 'react'\nimport MainForm from './components/MainForm'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='app'>\n        <MainForm />        \n      </div>\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}